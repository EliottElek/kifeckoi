{"version":3,"sources":["components/AccountPage/Settings/Settings.js","components/AccountPage/AccountPage.js"],"names":["Settings","React","useContext","Context","toggleTheme","setDark","defaultDark","dark","user","useState","maxCaractersCard","setMaxCaractersCard","useEffect","class","className","Switch","onChange","e","defaultChecked","type","min","max","step","target","value","Button","style","height","backgroundColor","HeroAvatarCard","lazy","renderLoader","Progress","size","reversed","AccountPage","fallback"],"mappings":"sPAqEeA,EAhEE,WAAO,IAAD,EAEnBC,IAAMC,WAAWC,KADXC,EADa,EACbA,YAAaC,EADA,EACAA,QAASC,EADT,EACSA,YAAaC,EADtB,EACsBA,KAAMC,EAD5B,EAC4BA,KAD5B,EAG2BP,IAAMQ,SAAS,GAH1C,mBAGdC,EAHc,KAGIC,EAHJ,KAOrB,OAHAV,IAAMW,WAAU,WACdD,EAAmB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAME,oBACzB,QAACF,QAAD,IAACA,OAAD,EAACA,EAAME,iBAAkBC,IAE1B,sBAAKE,MAAO,sBAAZ,UACE,+CACA,qBAAKC,UAAW,gCAChB,0CACA,sBAAKA,UAAW,4BAAhB,UACE,kDAEGP,EAAO,qBAAa,wBAEvB,cAACQ,EAAA,EAAD,CACEC,SAAU,SAACC,GACTb,EAAYa,GACZZ,GAASE,IAEXW,eAAgBZ,OAGpB,kDACA,sBAAKQ,UAAW,4BAAhB,UACE,iJAIA,uBACEA,UAAW,0CACXK,KAAK,SACLC,IAAI,IACJC,IAAI,MACJC,KAAK,IACLN,SAAU,SAACC,GAAD,OAAON,EAAoBM,EAAEM,OAAOC,QAC9CA,MAAOd,OAGX,qBAAKI,UAAW,qCAChB,oBAAIA,UAAU,sBAAd,4BACA,qBAAKA,UAAW,4BAAhB,SACE,sBAAKA,UAAW,kCAAhB,UACE,cAACW,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,OAAQC,gBAAiB,wBAD5C,4BAKA,cAACH,EAAA,EAAD,CACEC,MAAO,CACLC,OAAQ,OACRC,gBAAiB,4BAHrB,0CCnDJC,EAAiBC,gBAAK,kBAAM,mCAE5BC,EAAe,kBAAM,cAACC,EAAA,EAAD,CAAUC,KAAK,SAASC,UAAQ,KAc5CC,UAbK,WAClB,OACE,sBAAKrB,UAAU,2BAAf,UACE,cAAC,WAAD,CAAUsB,SAAUL,IAApB,SACE,cAACF,EAAD,MAEF,cAAC,WAAD,CAAUO,SAAUL,IAApB,SACE,cAAC,EAAD","file":"static/js/11.78c6daf2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Context } from \"../../Context/Context\";\nimport \"./Settings.scss\";\nimport Switch from \"../../../materials/Switch/Switch\";\nimport Button from \"../../../materials/Button/Button\";\nconst Settings = () => {\n  const { toggleTheme, setDark, defaultDark, dark, user } =\n    React.useContext(Context);\n  const [maxCaractersCard, setMaxCaractersCard] = React.useState(0);\n  React.useEffect(() => {\n    setMaxCaractersCard(user?.maxCaractersCard);\n  }, [user?.maxCaractersCard, setMaxCaractersCard]);\n  return (\n    <div class={\"settings__container\"}>\n      <h1>Paramètres</h1>\n      <div className={\"settings__container__spacer\"} />\n      <h3>Thème</h3>\n      <div className={\"settings__container__item\"}>\n        <span>\n          Passer en mode\n          {dark ? \" jour ☀️\" : \" nuit 🌙\"}\n        </span>\n        <Switch\n          onChange={(e) => {\n            toggleTheme(e);\n            setDark(!dark);\n          }}\n          defaultChecked={defaultDark}\n        />\n      </div>\n      <h3>Évènements</h3>\n      <div className={\"settings__container__item\"}>\n        <span>\n          Définissez combien de caractères maximum s'affichent sur une carte.\n          Par défaut, nous conseillons 65.\n        </span>\n        <input\n          className={\"settings__container__item__number-input\"}\n          type=\"number\"\n          min=\"1\"\n          max=\"120\"\n          step=\"1\"\n          onChange={(e) => setMaxCaractersCard(e.target.value)}\n          value={maxCaractersCard}\n        />\n      </div>\n      <div className={\"settings__container__item__space\"}></div>\n      <h3 className=\"danger__zone__title\">Zone de danger</h3>\n      <div className={\"settings__container__item\"}>\n        <div className={\"danger__zone__action__container\"}>\n          <Button\n            style={{ height: \"30px\", backgroundColor: \"var(--warning-color)\" }}\n          >\n            Déconnexion\n          </Button>\n          <Button\n            style={{\n              height: \"30px\",\n              backgroundColor: \"rgba(241, 62, 62, 0.911)\",\n            }}\n          >\n            Supprimer le compte\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { lazy, Suspense } from \"react\";\nimport Progress from \"../../materials/Progress/Progress\";\nimport \"./AccountPage.scss\";\nimport Settings from \"./Settings/Settings\";\nconst HeroAvatarCard = lazy(() => import(\"./HeroAvatarCard/HeroAvatarCard\"));\n\nconst renderLoader = () => <Progress size=\"medium\" reversed />;\nconst AccountPage = () => {\n  return (\n    <div className=\"account__page__container\">\n      <Suspense fallback={renderLoader()}>\n        <HeroAvatarCard />\n      </Suspense>\n      <Suspense fallback={renderLoader()}>\n        <Settings />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default AccountPage;\n"],"sourceRoot":""}