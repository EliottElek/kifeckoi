{"version":3,"sources":["assets/images/defaultAvatar.webp","graphql/mutations.ts","materials/Modal/Modal.js","materials/CheckBox/CheckBox.js","rawEvents.js","components/Project/Project.js","components/Home/ClientItem.js","components/Home/Chart/Chart.js","components/Home/Chart/Chart2.js","components/Home/Chart/Chart3.js","components/Home/Home.js","components/StickyNavbar/StickyNavbar.js","components/StickyNavbar/StickyNavBarDefault.js","components/StickyNavbar/StickyNavBarAdvanced.js","materials/Drawer/Drawer.js","components/NoInternetConnectionWrapper/NoInternetConnectionWrapper.js","App.js","index.js","components/Context/Context.js","graphql/queries.ts","materials/Menu/MenuItem.js","materials/Button/Button.js","materials/Progress/Progress.js","materials/Menu/Menu.js","materials/Popup/Popup.js","materials/Avatar/Avatar.js","materials/Backdrop/Backdrop.js","assets/functions/getPeriod.js","assets/images/logo.png","materials/Switch/Switch.js"],"names":["CREATE_USER","gql","LOGIN","CREATE_CLIENT","CREATE_PROJECT","CREATE_EVENT","CHANGE_EVENT_STATE","CHANGE_EVENT_STATUS","CHANGE_EVENT_DESCRIPTION","DELETE_EVENT","DELETE_COMMENT","CREATE_COMMENT","CHANGE_COMMENT__CONTENT","ADD_CONTRIBUTORS_TO_PROJECT","DELETE_MULTIPLE_EVENTS","ADD_CONTRIBUTORS_TO_EVENT","MODIFY_PROJECT_GLOBAL_INFOS","MODIFY_PROJECT_NAME","Modal","children","open","setOpen","style","componentRef","React","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","e","current","contains","target","onClick","stopPropagation","ref","className","CheckBox","checked","setChecked","BasicCheckBox","RoundedCheckBox","rounded","rawEvents","id","title","tasks","Project","useContext","Context","currentProject","setCurrentProject","setTitle","useParams","dataProject","useQuery","FIND_PROJECT_BY_PROJECT_ID","variables","data","findProjectByProjectId","getElementById","innerHTML","name","to","ClientItem","client","navigate","useNavigate","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","maintainAspectRatio","responsive","plugins","legend","position","display","text","labels","datasets","label","map","faker","datatype","number","min","max","backgroundColor","Chart","width","PointElement","LineElement","borderColor","Chart2","ArcElement","borderWidth","Chart3","Home","user","GET_ALL_CLIENTS","userId","refetch","loading","useMutation","createClient","useState","nameInput","setNameInput","submit","a","toast","warning","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","resp","success","newProjectId","error","setTimeout","flexGrow","alignItems","justifyContent","Progress","getAllClients","length","i","Button","marginTop","autoFocus","value","placeholder","onChange","gap","height","reversed","StickyNavbar","StickyNavDefault","account","toggleTheme","dark","setDark","defaultDark","setOpenDrawer","openDrawer","setCurrentClient","handleLogout","openPopUp","setOpenPopUp","urlElement","window","location","href","split","period","getPeriod","src","logo","alt","data-tip","data-for","Avatar","avatarUrl","firstname","Popup","transform","bottom","Menu","MenuItem","Switch","defaultChecked","delayShow","effect","StickyNavAdvanced","setListStyle","listStyle","setAddCard","selectedEvents","Drawer","mainContent","secondaryContent","advanced","NoInternetConnection","props","isOnline","setOnline","navigator","onLine","POSITION","BOTTOM_LEFT","SidePanel","lazy","ErrorPage","Client","AccountPage","ActionsWide","GlobalInfos","Login","SignUp","icon","link","querySelector","createElement","rel","getElementsByTagName","appendChild","renderLoader","Backdrop","size","MainContent","exact","path","element","margin","fallback","drawerWidth","breakPoint","type","theme","SecondaryContent","SecureRoute","auth","App","process","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","authorization","ApolloClient","concat","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","createContext","ContextProvider","clients","setClients","users","setUsers","projects","setProjects","events","setEvents","setSelectedEvents","currentClient","markdown","setMarkdown","setAuth","setUser","addCard","jwt","verify","err","removeItem","getUserById","GET_USER_BY_ID","successful","setDarkTheme","setItem","documentElement","setAttribute","storedTheme","prefersDark","matchMedia","matches","Provider","reload","GET_ALL_USERS","FIND_CLIENT_BY_ID","FIND_PROJECTS_BY_CLIENT_ID","GET_ALL_EVENTS_ALL_TYPES","FIND_EVENTS_BY_PROJECT_ID","GET_ALL_COMMENTS_BY_EVENT_ID","active","disabled","mini","large","defaultAvatar","today","Date","yearNumber","JSON","stringify","getFullYear","slice","startDate","days","Math","floor","ceil","getDay","htmlFor"],"mappings":"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","file":"static/js/main.36dc0075.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/defaultAvatar.2ca07d6b.webp\";","import { gql } from \"@apollo/client\"\n\nexport const CREATE_USER = gql`\nmutation createUser($firstname: String! $lastname : String! $email : String! $avatarUrl : String! $username : String! $password : String!){\n    createUser(firstname : $firstname lastname : $lastname email : $email avatarUrl : $avatarUrl username : $username password : $password){\n        successful\n        message\n    }\n}\n`\nexport const LOGIN = gql`\nmutation login($email: String! $password: String!){\n  login(email : $email password : $password){\n    successful\n    message\n    token\n    } \n  }\n`\nexport const CREATE_CLIENT = gql`\nmutation createClient($name: String! $userId : String!){\n    createClient(name : $name userId : $userId){\n        id\n        name\n    }\n}\n`\nexport const CREATE_PROJECT = gql`\nmutation createProject($name: String! $clientId: String! $contributors : [String!]){\n    createProject(name: $name clientId: $clientId contributors : $contributors){\n        name\n        id\n        client{\n            id \n            name\n        }\n    }\n}\n`\nexport const CREATE_EVENT = gql`\nmutation createEvent($type: String! $projectId: String! $description : String! $contributors : [String!] $status : String! $creatorId: String! $period: String!){\n    createEvent(type: $type  projectId: $projectId description : $description contributors : $contributors status : $status creatorId : $creatorId period : $period){\n        type\n        id\n        description\n        status\n        creation\n        period\n        contributors{\n            id\n            firstname\n            lastname\n            email\n            avatarUrl\n            username\n        } \n        creator {\n                id\n                firstname\n                lastname\n                avatarUrl\n                email\n            }\n    }\n}\n`\n\nexport const CHANGE_EVENT_STATE = gql`\nmutation changeEventState($eventId: String! $newState: String!){\n    changeEventState(eventId: $eventId  newState: $newState){\n        message\n    }\n}\n`\n\nexport const CHANGE_EVENT_STATUS = gql`\nmutation changeEventStatus($eventId: String! $newStatus: String!){\n    changeEventStatus(eventId: $eventId  newStatus: $newStatus){\n        message\n    }\n}\n`\nexport const CHANGE_EVENT_DESCRIPTION = gql`\nmutation changeEventDescription($eventId: String! $newDescription: String!){\n    changeEventDescription(eventId: $eventId  newDescription: $newDescription){\n        message\n    }\n}\n`\nexport const DELETE_EVENT = gql`\nmutation deleteEvent($eventId: String!){\n    deleteEvent(eventId: $eventId){\n        message\n    }\n}\n`\nexport const DELETE_COMMENT = gql`\nmutation deleteComment($commentId: String!){\n    deleteComment(commentId: $commentId){\n        id\n    }\n}\n`\nexport const CREATE_COMMENT = gql`\nmutation createComment($eventId: String! $authorId : String! $content : String!){\n    createComment(eventId: $eventId authorId: $authorId content: $content){\n        id\n        content\n        creation\n        author{\n          id\n          email\n          firstname\n          lastname\n          avatarUrl\n        }\n    }\n}`\nexport const CHANGE_COMMENT__CONTENT = gql`\nmutation changeCommentContent($commentId: String! $newContent: String!){\n    changeCommentContent(commentId : $commentId newContent : $newContent){\n        id\n    }\n}\n`\nexport const ADD_CONTRIBUTORS_TO_PROJECT = gql`\nmutation addContributorsToProject($projectId : String! $contributors : [String!]){\n    addContributorsToProject(projectId:$projectId contributors:$contributors){\n        id\n    }\n}\n`\nexport const DELETE_MULTIPLE_EVENTS = gql`\nmutation deleteMultipleEvents($eventIds : [String!]){\n    deleteMultipleEvents(eventIds:$eventIds){\n        message\n        successful\n    }\n}\n`\nexport const ADD_CONTRIBUTORS_TO_EVENT = gql`\nmutation addContributorsToEvent($eventId : String! $contributors : [String!]){\n    addContributorsToEvent(eventId:$eventId contributors:$contributors){\n        id\n    }\n}\n`\n\nexport const MODIFY_PROJECT_GLOBAL_INFOS = gql`\nmutation modifyProjectGlobalInfos($projectId : String!  $globalStatus: String! $planningStatus: String! $perimeterStatus: String! $globalDescription: String! $planningDescription: String! $perimeterDescription: String! $goLiveDate: String! $goCopyDate: String! $logoUrl: String!){\n    modifyProjectGlobalInfos(projectId:$projectId globalStatus:$globalStatus planningStatus:$planningStatus perimeterStatus:$perimeterStatus globalDescription:$globalDescription planningDescription:$planningDescription perimeterDescription:$perimeterDescription goLiveDate:$goLiveDate goCopyDate:$goCopyDate logoUrl:$logoUrl){\n        id\n    }\n}\n`\nexport const MODIFY_PROJECT_NAME = gql`\nmutation modifyProjectName($projectId : String! $name: String!){\n    modifyProjectName(projectId:$projectId name:$name){\n        id\n    }\n}\n`","import React from \"react\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport \"./Modal.scss\";\nconst Modal = ({ children, open, setOpen, style }) => {\n  const componentRef = React.useRef();\n\n  React.useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return () => document.removeEventListener(\"click\", handleClick);\n    function handleClick(e) {\n      if (componentRef && componentRef.current) {\n        const ref = componentRef.current;\n        if (!ref.contains(e.target) && open) {\n          setOpen && setOpen(false);\n        }\n      }\n    }\n  }, [setOpen, open]);\n  if (!open) return null;\n  return (\n    <>\n      <Backdrop onClick={() => setOpen && setOpen(false)} />\n      <div\n        onClick={(e) => e.stopPropagation()}\n        style={style}\n        ref={componentRef}\n        className=\"modal\"\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import \"./CheckBox.scss\";\nconst CheckBox = ({\n  children,\n  checked,\n  onClick,\n  setChecked,\n  style,\n  rounded,\n}) => {\n  const BasicCheckBox = () => {\n    return (\n      <div\n        style={style}\n        className=\"checkbox_container\"\n        onClick={(e) => {\n          onClick && onClick();\n          e.stopPropagation();\n          setChecked(!checked);\n        }}\n      >\n        <div className=\"checkbox\">\n          {checked && (\n            <div className=\"checkbox_inner\">\n              <i className=\"gg-check\"></i>\n            </div>\n          )}\n        </div>\n        <div>{children}</div>\n      </div>\n    );\n  };\n  const RoundedCheckBox = () => {\n    return (\n      <div\n        style={style}\n        className=\"checkbox_container_rounded\"\n        onClick={() => setChecked(!checked)}\n      >\n        <div className=\"checkbox_rounded\">\n          {checked && <div className=\"checkbox_inner_rounded\"></div>}\n        </div>\n        <div>{children}</div>\n      </div>\n    );\n  };\n  if (rounded) return <RoundedCheckBox />;\n  return <BasicCheckBox />;\n};\n\nexport default CheckBox;\n","const rawEvents = [\n  {\n    id: \"1\",\n    title: \"Nouveau\" || \"nouveau\",\n    tasks: [],\n  },\n  {\n    id: \"2\",\n    title: \"En cours\" || \"en cours\" || \"En Cours\",\n    tasks: [],\n  },\n  {\n    id: \"3\",\n    title: \"À planifier\" || \"A planifier\" || \"a planifier\" || \"à planifier\",\n    tasks: [],\n  },\n  {\n    id: \"4\",\n    title:\n      \"Réalisé\" ||\n      \"realisé\" ||\n      \"Realisé\" ||\n      \"réalisé\" ||\n      \"Realise\" ||\n      \"realise\",\n    tasks: [],\n  },\n  {\n    id: \"5\",\n    title:\n      \"Décalage date\" || \"décalage date\" || \"Decalage date\" || \"decalage date\",\n    tasks: [],\n  },\n];\nexport default rawEvents;\n","import React, { useContext } from \"react\";\nimport { Navigate, useParams } from \"react-router\";\nimport { Context } from \"../Context/Context\";\nimport \"./Project.css\";\nimport { FIND_PROJECT_BY_PROJECT_ID } from \"../../graphql/queries\";\nimport { useQuery } from \"@apollo/client\";\nconst Project = () => {\n  const { currentProject, setCurrentProject, setTitle } = useContext(Context);\n\n  const { id } = useParams();\n\n  const dataProject = useQuery(FIND_PROJECT_BY_PROJECT_ID, {\n    variables: { id: id },\n  });\n  React.useEffect(() => {\n    if (dataProject?.data) {\n      setCurrentProject({ ...dataProject?.data?.findProjectByProjectId });\n    }\n  }, [setCurrentProject, dataProject?.data]);\n  React.useEffect(() => {\n    if (currentProject) {\n      const title = document.getElementById(\"title\");\n      title.innerHTML = `${currentProject?.name} | Kifekoi`;\n    }\n  }, [currentProject?.name, currentProject]);\n  React.useEffect(() => {\n    if (currentProject) {\n      setTitle(currentProject?.name);\n    }\n  }, [currentProject?.name, setTitle, currentProject]);\n\n  return <Navigate to=\"global\" />;\n};\nexport default Project;\n","import React from \"react\";\nimport \"./Home.scss\";\n\nimport { useNavigate } from \"react-router\";\n\nconst ClientItem = ({ client }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div\n      onClick={() => navigate(`/client/${client.id}`)}\n      className={\"client__item\"}\n    >\n      <div className={\"client__item__name__container\"}>\n        <p>{client.name}</p>\n      </div>\n      <i className=\"gg-chevron-right\"></i>\n    </div>\n  );\n};\n\nexport default ClientItem;\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport faker from \"faker\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  maintainAspectRatio: false,\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"Chart.js Bar Chart\",\n    },\n  },\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n    {\n      label: \"Dataset 2\",\n      data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ],\n};\n\nexport default function Chart() {\n  return <Bar options={options} data={data} width={400} />;\n}\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport faker from \"faker\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  maintainAspectRatio: false,\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"Chart.js Line Chart\",\n    },\n  },\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\nexport const data = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n    {\n      label: \"Dataset 2\",\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ],\n};\n\nexport function Chart2() {\n  return <Line options={options} data={data} width={400} />;\n}\n","import React from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const data = {\n  labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n  datasets: [\n    {\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        \"rgba(255, 99, 132, 0.2)\",\n        \"rgba(54, 162, 235, 0.2)\",\n        \"rgba(255, 206, 86, 0.2)\",\n        \"rgba(75, 192, 192, 0.2)\",\n        \"rgba(153, 102, 255, 0.2)\",\n        \"rgba(255, 159, 64, 0.2)\",\n      ],\n      borderColor: [\n        \"rgba(255, 99, 132, 1)\",\n        \"rgba(54, 162, 235, 1)\",\n        \"rgba(255, 206, 86, 1)\",\n        \"rgba(75, 192, 192, 1)\",\n        \"rgba(153, 102, 255, 1)\",\n        \"rgba(255, 159, 64, 1)\",\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nexport function Chart3() {\n  return <Pie data={data} />;\n}\n","import React, { useContext } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport \"./Home.scss\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport ClientItem from \"./ClientItem\";\nimport Button from \"../../materials/Button/Button\";\nimport { CREATE_CLIENT } from \"../../graphql/mutations\";\nimport { GET_ALL_CLIENTS } from \"../../graphql/queries\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"../../materials/Modal/Modal\";\nimport Progress from \"../../materials/Progress/Progress\";\nimport CheckBox from \"../../materials/CheckBox/CheckBox\";\nimport { useNavigate } from \"react-router\";\nimport Chart from \"./Chart/Chart\";\nimport { Chart2 } from \"./Chart/Chart2\";\nimport { Chart3 } from \"./Chart/Chart3\";\nconst Home = () => {\n  const { user } = useContext(Context);\n  const { data, refetch, loading } = useQuery(GET_ALL_CLIENTS, {\n    variables: { userId: user?.id },\n  });\n  const [createClient] = useMutation(CREATE_CLIENT);\n  const [open, setOpen] = React.useState(false);\n  const [checked, setChecked] = React.useState(false);\n  const navigate = useNavigate();\n  const [nameInput, setNameInput] = React.useState(\"\");\n  const title = document.getElementById(\"title\");\n  title.innerHTML = `Clients | Kifekoi`;\n  const submit = async (e) => {\n    if (nameInput === \"\") {\n      return toast.warning(`Le client doit avoir un nom.`, {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n      });\n    }\n    try {\n      const resp = await createClient({\n        variables: { name: nameInput, userId: user.id },\n      });\n      toast.success(`${nameInput} créé avec succès.`, {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n      });\n      refetch();\n      if (checked) {\n        const newProjectId = resp.data.createClient.id;\n        navigate(`/client/${newProjectId}`);\n      }\n    } catch (err) {\n      toast.error(`Impossible de créer le client.`, {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n      });\n    }\n    setTimeout(() => {\n      refetch();\n    }, 200);\n    setNameInput(\"\");\n    setOpen(false);\n  };\n  if (loading)\n    return (\n      <div\n        style={{\n          flexGrow: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Progress />\n      </div>\n    );\n  return (\n    <div className=\"home\">\n      <div className={\"home__container\"}>\n        <div className={\"home__clients__container\"}>\n          <h1 className={\"home__clients__container__title\"}>Clients</h1>\n          <div className={\"home__clients__container__spacer\"} />\n          <div className=\"home__clients__container__list\">\n            {data?.getAllClients?.length === 0 && (\n              <h4 className={\"home__clients__container__title\"}>\n                Aucun client.\n              </h4>\n            )}\n            {data?.getAllClients?.length !== 0 &&\n              data?.getAllClients?.map((client, i) => (\n                <ClientItem key={i} client={client} />\n              ))}\n          </div>\n        </div>\n        <div className=\"home__new__clients__container\">\n          <h1 className={\"home__clients__container__title\"}>Nouveau client</h1>\n          <div className={\"home__clients__container__spacer\"} />\n          <Button onClick={() => setOpen(true)} style={{ marginTop: \"10px\" }}>\n            Créer un nouveau client +\n          </Button>\n        </div>\n        <Modal open={open} setOpen={setOpen}>\n          <div className=\"modal__content__container\">\n            <input\n              autoFocus\n              className=\"name__input medium__title__textarea\"\n              value={nameInput}\n              placeholder={`Comment s'appelle le client ?`}\n              onChange={(e) => setNameInput(e.target.value)}\n            />{\" \"}\n            <div className=\"checkbox__container\">\n              <CheckBox checked={checked} setChecked={setChecked} />{\" \"}\n              <span>Aller sur la page client après la création</span>\n            </div>\n            <div style={{ display: \"flex\", gap: \"6px\" }}>\n              <Button\n                style={{ height: \"30px\" }}\n                reversed\n                onClick={() => setOpen(false)}\n              >\n                Annuler\n              </Button>\n              <Button style={{ height: \"30px\" }} onClick={submit}>\n                Valider\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n      <div className={\"chart__container\"}>\n        <div className={\"chart__item\"}>\n          <Chart />\n        </div>\n        <div className={\"chart__item\"}>\n          <Chart2 />\n        </div>\n        <div className={\"chart__item\"}>\n          <Chart3 />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./StickyNavbar.scss\";\nconst StickyNavbar = ({ children, style }) => {\n  return (\n    <div style={style} className=\"stickynavbar__container\">\n      {children}\n    </div>\n  );\n};\n\nexport default StickyNavbar;\n","import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Context } from \"../Context/Context\";\nimport Switch from \"../../materials/Switch/Switch\";\nimport Avatar from \"../../materials/Avatar/Avatar\";\nimport Menu from \"../../materials/Menu/Menu\";\nimport MenuItem from \"../../materials/Menu/MenuItem\";\nimport Popup from \"../../materials/Popup/Popup\";\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport StickyNavbar from \"../../components/StickyNavbar/StickyNavbar\";\nimport logo from \"../../assets/images/logo.png\";\nimport getPeriod from \"../../assets/functions/getPeriod\";\nimport ReactTooltip from \"react-tooltip\";\nconst StickyNavDefault = ({ account }) => {\n  const {\n    currentProject,\n    user,\n    toggleTheme,\n    dark,\n    setDark,\n    defaultDark,\n    setOpenDrawer,\n    openDrawer,\n    setCurrentProject,\n    setCurrentClient,\n    handleLogout,\n  } = useContext(Context);\n  const [openPopUp, setOpenPopUp] = React.useState(false);\n  const navigate = useNavigate();\n  let urlElement = window.location.href.split(\"/\")[5];\n  let period = getPeriod();\n  return (\n    <StickyNavbar>\n      {!account && (\n        <button\n          className={\"toggle__drawer__button\"}\n          onClick={() => setOpenDrawer(!openDrawer)}\n        >\n          <CgMenuGridO />\n        </button>\n      )}\n\n      <div className=\"name__container\">\n        <img\n          onClick={() => {\n            setCurrentProject(null);\n            setCurrentClient(null);\n            navigate(`/`);\n          }}\n          src={logo}\n          alt=\"\"\n          className=\"logo__kifekoi\"\n        />\n        {!account && (\n          <h2\n            className=\"name__container__title\"\n            onClick={() => navigate(`/project/${currentProject?.id}/global`)}\n          >\n            {currentProject?.name}\n            {urlElement && ` - ${urlElement} `}\n          </h2>\n        )}\n        {!account && (\n          <span className=\"period__span\" data-tip data-for=\"weekTooltip\">\n            {period}\n          </span>\n        )}\n      </div>\n      <div className=\"events__container\">\n        <button className=\"settings__button\" onClick={() => setOpenPopUp(true)}>\n          <Avatar src={user?.avatarUrl} name={user?.firstname} />\n          <Popup\n            style={{ transform: \"translate(-40%, 65%)\" }}\n            open={openPopUp}\n            setOpen={setOpenPopUp}\n            bottom\n          >\n            <Menu>\n              <MenuItem\n                onClick={(e) => {\n                  setOpenPopUp(false);\n                  navigate(\"/account\");\n                }}\n              >\n                <p>Mon compte</p>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  handleLogout();\n                }}\n              >\n                <p>Déconnexion</p>\n              </MenuItem>\n              <span className={\"divider\"} />\n              <li className={\"menu-item-no-hover\"}>\n                <span>\n                  Passer en mode\n                  {dark ? \" jour ☀️\" : \" nuit 🌙\"}\n                </span>\n                <Switch\n                  onChange={(e) => {\n                    toggleTheme(e);\n                    setDark(!dark);\n                  }}\n                  defaultChecked={defaultDark}\n                />\n              </li>\n            </Menu>\n          </Popup>\n        </button>\n      </div>\n      <ReactTooltip delayShow={500} id=\"weekTooltip\" effect=\"solid\">\n        <span>Semaine actuelle</span>\n      </ReactTooltip>\n    </StickyNavbar>\n  );\n};\nexport default StickyNavDefault;\n","import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Context } from \"../Context/Context\";\nimport Switch from \"../../materials/Switch/Switch\";\nimport Avatar from \"../../materials/Avatar/Avatar\";\nimport Menu from \"../../materials/Menu/Menu\";\nimport MenuItem from \"../../materials/Menu/MenuItem\";\nimport Popup from \"../../materials/Popup/Popup\";\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport { MdFormatListBulleted } from \"react-icons/md\";\nimport StickyNavbar from \"./StickyNavbar\";\n// import Button from \"../../materials/Button/Button\";\nimport logo from \"../../assets/images/logo.png\";\nimport getPeriod from \"../../assets/functions/getPeriod\";\nimport ReactTooltip from \"react-tooltip\";\nconst StickyNavAdvanced = () => {\n  const {\n    currentProject,\n    user,\n    toggleTheme,\n    dark,\n    setDark,\n    defaultDark,\n    setOpenDrawer,\n    openDrawer,\n    setCurrentProject,\n    setCurrentClient,\n    handleLogout,\n    setListStyle,\n    listStyle,\n    setAddCard,\n    selectedEvents,\n  } = useContext(Context);\n  const [openPopUp, setOpenPopUp] = React.useState(false);\n  const navigate = useNavigate();\n  let urlElement = window.location.href.split(\"/\")[5];\n\n  let period = getPeriod();\n  return (\n    <StickyNavbar>\n      <button\n        className={\"toggle__drawer__button\"}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <CgMenuGridO />\n      </button>\n      <div className=\"name__container\">\n        <img\n          onClick={() => {\n            setCurrentProject(null);\n            setCurrentClient(null);\n            navigate(`/`);\n          }}\n          src={logo}\n          alt=\"\"\n          className=\"logo__kifekoi\"\n        />\n        <h2\n          className=\"name__container__title\"\n          onClick={() => navigate(`/project/${currentProject?.id}/global`)}\n        >\n          {currentProject?.name}\n          {urlElement && ` - ${urlElement} `}\n        </h2>\n        <span className=\"period__span\" data-tip data-for=\"weekTooltip\">\n          {period}\n        </span>\n        <button\n          onClick={() => {\n            setAddCard(false);\n            setListStyle(!listStyle);\n          }}\n          className={\n            listStyle ? \"list__style__btn__active\" : \"list__style__btn\"\n          }\n        >\n          <MdFormatListBulleted />\n        </button>\n        {listStyle && (\n          <span className=\"selected__number__span\">\n            {selectedEvents?.length} sélectionné(s)\n          </span>\n        )}\n      </div>\n      <div className=\"events__container\">\n        {/* <div className=\"nav__actions\">\n          <Button style={{ height: \"35px\" }}>Sauvegarder</Button>\n          <Button style={{ height: \"35px\" }} reversed>\n            Valider\n          </Button>\n          <Button style={{ height: \"35px\" }} reversed>\n            Libérer\n          </Button>\n          <Button style={{ height: \"35px\" }} reversed>\n            Annuler\n          </Button>\n        </div> */}\n        <button className=\"settings__button\" onClick={() => setOpenPopUp(true)}>\n          <Avatar src={user?.avatarUrl} name={user?.firstname} />\n          <Popup\n            style={{ transform: \"translate(-40%, 65%)\" }}\n            open={openPopUp}\n            setOpen={setOpenPopUp}\n            bottom\n          >\n            <Menu>\n              <MenuItem\n                onClick={(e) => {\n                  setOpenPopUp(false);\n                  navigate(\"/account\");\n                }}\n              >\n                <p>Mon compte</p>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  handleLogout();\n                }}\n              >\n                <p>Déconnexion</p>\n              </MenuItem>\n              <span className={\"divider\"} />\n              <li className={\"menu-item-no-hover\"}>\n                <span>\n                  Passer en mode\n                  {dark ? \" jour ☀️\" : \" nuit 🌙\"}\n                </span>\n                <Switch\n                  onChange={(e) => {\n                    toggleTheme(e);\n                    setDark(!dark);\n                  }}\n                  defaultChecked={defaultDark}\n                />\n              </li>\n            </Menu>\n          </Popup>\n        </button>\n      </div>\n      <ReactTooltip delayShow={500} id=\"weekTooltip\" effect=\"solid\">\n        <span>Semaine actuelle</span>\n      </ReactTooltip>\n    </StickyNavbar>\n  );\n};\nexport default StickyNavAdvanced;\n","import React from \"react\";\nimport \"./Drawer.scss\";\nimport { Context } from \"../../components/Context/Context\";\nimport StickyNavDefault from \"../../components/StickyNavbar/StickyNavBarDefault\";\nimport StickyNavAdvanced from \"../../components/StickyNavbar/StickyNavBarAdvanced\";\nconst Drawer = ({ mainContent, secondaryContent, advanced }) => {\n  const { openDrawer } = React.useContext(Context);\n\n  return (\n    <div className=\"very__main__container\">\n      {advanced ? <StickyNavAdvanced /> : <StickyNavDefault />}\n      <div\n        className={\n          openDrawer ? \"drawer_container\" : \"drawer_container closed__container\"\n        }\n      >\n        <div\n          className={\n            openDrawer\n              ? \"drawer_container_secondary\"\n              : \"drawer_container_secondary closed__secondary\"\n          }\n        >\n          {secondaryContent}\n        </div>\n        <div className=\"drawer_container_main\">{mainContent}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Drawer;\n","import { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nconst NoInternetConnection = (props) => {\n  // state variable holds the state of the internet connection\n  const [isOnline, setOnline] = useState(true);\n\n  // On initization set the isOnline state.\n  useEffect(() => {\n    setOnline(navigator.onLine);\n    if (!isOnline)\n      return toast.warning(\n        \"Vous êtes hors connexion. Vérifiez votre connexion internet.\",\n        {\n          position: toast.POSITION.BOTTOM_LEFT,\n        }\n      );\n  }, [isOnline]);\n\n  // event listeners to update the state\n  window.addEventListener(\"online\", () => {\n    setOnline(true);\n  });\n\n  window.addEventListener(\"offline\", () => {\n    setOnline(false);\n  });\n  return props.children;\n};\n\nexport default NoInternetConnection;\n","import React, { useContext, lazy, Suspense } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Project from \"./components/Project/Project\";\nimport Home from \"./components/Home/Home\";\nimport { Context } from \"./components/Context/Context\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.scss\";\nimport Drawer from \"./materials/Drawer/Drawer\";\nimport Backdrop from \"./materials/Backdrop/Backdrop\";\nimport Progress from \"./materials/Progress/Progress\";\nimport StickyNavDefault from \"./components/StickyNavbar/StickyNavBarDefault\";\nimport NoInternetConnection from \"./components/NoInternetConnectionWrapper/NoInternetConnectionWrapper\";\nconst SidePanel = lazy(() => import(\"./components/DashBoard/SidePanel\"));\nconst ErrorPage = lazy(() => import(\"./components/ErrorPage/ErrorPage\"));\nconst Client = lazy(() => import(\"./components/Client/Client\"));\nconst AccountPage = lazy(() => import(\"./components/AccountPage/AccountPage\"));\nconst ActionsWide = lazy(() => import(\"./components/DndWide/DndWide\"));\nconst GlobalInfos = lazy(() => import(\"./components/GlobalInfos/GlobalInfos\"));\nconst Login = lazy(() => import(\"./components/Login/Login\"));\nconst SignUp = lazy(() => import(\"./components/SignUp/SignUp\"));\nconst icon = lazy(() => import(\"../src/assets/images/icon.png\"));\n\nvar link = document.querySelector(\"link[rel~='icon']\");\nif (!link) {\n  link = document.createElement(\"link\");\n  link.rel = \"icon\";\n  document.getElementsByTagName(\"head\")[0].appendChild(link);\n}\nlink.href = icon;\nconst renderLoader = () => (\n  <Backdrop>\n    <Progress size=\"medium\" reversed />\n  </Backdrop>\n);\n\nconst MainContent = () => {\n  const { dark } = useContext(Context);\n  return (\n    <NoInternetConnection>\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <Home />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/login\"\n          element={\n            <Suspense fallback={renderLoader()}>\n              <Login />\n            </Suspense>\n          }\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          element={\n            <Suspense fallback={renderLoader()}>\n              <SignUp />\n            </Suspense>\n          }\n        />\n        <Route\n          exact\n          path=\"/404\"\n          element={\n            <Suspense fallback={renderLoader()}>\n              <ErrorPage />\n            </Suspense>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <Project />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/global\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <GlobalInfos />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/actions\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                advanced\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <ActionsWide type=\"Action\" />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id\"\n          element={<Navigate to=\"/project/:id/global\" />}\n        />\n        <Route exact path=\"/project\" element={<Navigate to=\"/\" />} />\n        <Route exact path=\"/client\" element={<Navigate to=\"/\" />} />\n        <Route\n          exact\n          path=\"/project/:id/infos\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                advanced\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <ActionsWide type=\"Info\" />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/decisions\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                advanced\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <ActionsWide type=\"Decision\" />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/risks\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                advanced\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <ActionsWide type=\"Risk\" />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/problems\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                advanced\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <ActionsWide type=\"Problems\" />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/project/:id/deliverables\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                advanced\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <ActionsWide type=\"Deliverables\" />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/client/:id\"\n          element={\n            <div className={\"dashboard\"}>\n              <Drawer\n                mainContent={\n                  <SecureRoute margin>\n                    <Suspense fallback={renderLoader()}>\n                      <Client />\n                    </Suspense>\n                  </SecureRoute>\n                }\n                secondaryContent={\n                  <Suspense fallback={renderLoader()}>\n                    <SecondaryContent />\n                  </Suspense>\n                }\n                drawerWidth={240}\n                breakPoint={800}\n              />\n            </div>\n          }\n        />\n        <Route\n          exact\n          path=\"/account\"\n          element={\n            <SecureRoute margin>\n              <Suspense fallback={renderLoader()}>\n                <StickyNavDefault account />\n                <AccountPage />\n              </Suspense>\n            </SecureRoute>\n          }\n        />\n        <Route exact path=\"*\" element={<ErrorPage />} />\n      </Routes>\n      <ToastContainer theme={dark ? \"dark\" : \"light\"} />\n    </NoInternetConnection>\n  );\n};\nconst SecondaryContent = () => {\n  return <SidePanel />;\n};\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={renderLoader()}>\n        <MainContent />\n      </Suspense>\n    </div>\n  );\n};\nconst SecureRoute = ({ children }) => {\n  const { auth } = React.useContext(Context);\n  if (!auth) {\n    return <Navigate to=\"/login\" />;\n  }\n  return children;\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ContextProvider } from \"./components/Context/Context\";\nimport {\n  ApolloClient,\n  ApolloLink,\n  InMemoryCache,\n  HttpLink,\n} from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/client\";\nprocess.env[\"KIFEKOI_ENV\"] = \"dev\";\nconst httpLink = new HttpLink({\n  uri:\n    process.env[\"KIFEKOI_ENV\"] === \"dev\"\n      ? \"http://localhost:3002/graphql\"\n      : \"https://kifekoi-api.herokuapp.com/graphql\",\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  // Retrieve the authorization token from local storage.\n  const token = localStorage.getItem(\"token\");\n\n  // Use the setContext method to set the HTTP headers.\n  operation.setContext({\n    headers: {\n      authorization: token ? `Bearer ${token}` : \"Bearer r\",\n    },\n  });\n  // Call the next link in the middleware chain.\n  return forward(operation);\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink), // Chain it with the HttpLink\n  cache: new InMemoryCache(),\n});\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <ContextProvider>\n        <Router>\n          <App />\n        </Router>\n      </ContextProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport rawEvents from \"../../rawEvents\";\nimport { GET_USER_BY_ID } from \"../../graphql/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport jwt from \"jsonwebtoken\";\nexport const Context = React.createContext();\n\nexport const ContextProvider = ({ children }) => {\n  const [clients, setClients] = React.useState([]);\n  const [users, setUsers] = React.useState();\n  const [openDrawer, setOpenDrawer] = React.useState(true);\n  const [projects, setProjects] = React.useState([]);\n  const [events, setEvents] = React.useState(rawEvents);\n  const [selectedEvents, setSelectedEvents] = React.useState([]);\n  const [currentClient, setCurrentClient] = React.useState(null);\n  const [currentProject, setCurrentProject] = React.useState(null);\n  const [listStyle, setListStyle] = React.useState(false);\n  const [markdown, setMarkdown] = React.useState(true);\n  const [dark, setDark] = React.useState(true);\n  const [auth, setAuth] = React.useState(true);\n  const [user, setUser] = React.useState(null);\n  const [addCard, setAddCard] = React.useState(false);\n\n  const SECRET_KEY = \"secret!\";\n\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    try {\n      const decoded = jwt.verify(token, SECRET_KEY);\n      var userId = decoded.id;\n    } catch (err) {\n      setAuth(false);\n      localStorage.removeItem(\"token\");\n    }\n  }\n  const getUserById = useQuery(GET_USER_BY_ID, {\n    variables: { userId: userId },\n  });\n  React.useEffect(() => {\n    if (getUserById?.data?.successful === false || !userId) {\n      setAuth(false);\n      localStorage.removeItem(\"token\");\n    }\n    if (userId) {\n      setUser(getUserById?.data?.getUserById);\n      setAuth(true);\n    } else {\n      setAuth(false);\n      localStorage.removeItem(\"token\");\n    }\n  }, [getUserById, setUser, userId, setAuth]);\n  const setDarkTheme = () => {\n    // 2\n    localStorage.setItem(\"theme\", \"dark\");\n\n    // 3\n    document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  };\n\n  const setLightTheme = () => {\n    localStorage.setItem(\"theme\", \"light\");\n    document.documentElement.setAttribute(\"data-theme\", \"light\");\n  };\n\n  // 4\n  const storedTheme = localStorage.getItem(\"theme\");\n\n  const prefersDark =\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\n  const defaultDark =\n    storedTheme === \"dark\" || (storedTheme === null && prefersDark);\n\n  if (defaultDark) {\n    setDarkTheme();\n  }\n  // 5\n  const toggleTheme = (e) => {\n    if (e.target.checked) {\n      setDarkTheme();\n    } else {\n      setLightTheme();\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  return (\n    <Context.Provider\n      value={{\n        auth: auth,\n        setAuth: setAuth,\n        toggleTheme: toggleTheme,\n        defaultDark: defaultDark,\n        setOpenDrawer: setOpenDrawer,\n        openDrawer: openDrawer,\n        dark: dark,\n        setDark: setDark,\n        user: user,\n        setUser: setUser,\n        users: users,\n        setUsers: setUsers,\n        clients: clients,\n        setClients: setClients,\n        projects: projects,\n        setProjects: setProjects,\n        events: events,\n        setEvents: setEvents,\n        selectedEvents:selectedEvents,\n        setSelectedEvents:setSelectedEvents,\n        currentClient: currentClient,\n        setCurrentClient: setCurrentClient,\n        currentProject: currentProject,\n        setCurrentProject: setCurrentProject,\n        //defines if the view is in cards or table\n        listStyle: listStyle,\n        setListStyle: setListStyle,\n        markdown: markdown,\n        setMarkdown: setMarkdown,\n        handleLogout: handleLogout,\n        getUserById: getUserById,\n        setAddCard: setAddCard,\n        addCard: addCard,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import { gql } from \"@apollo/client\"\n\nexport const GET_ALL_USERS = gql`\nquery{\n    getAllUsers{\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n    }\n  }\n`\n\nexport const GET_USER_BY_ID = gql`\nquery getUserById($userId: String!){\n  getUserById(userId : $userId){\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n      maxCaractersCard\n      projects{\n        id\n        name\n      }\n    } \n  }\n`\nexport const GET_ALL_CLIENTS = gql`\nquery getAllClients($userId : String!){\n    getAllClients(userId : $userId){\n      name\n      id\n    }\n  }\n`\n\nexport const FIND_CLIENT_BY_ID = gql`\nquery findClientById($id: String!){\n    findClientById(id : $id){\n        id\n        name\n        projects {\n          id\n          name\n          logoUrl\n        }\n    }\n}\n`\nexport const FIND_PROJECT_BY_PROJECT_ID = gql`\nquery findProjectByProjectId($id: String! $userId : String!){\n  findProjectByProjectId(id : $id userId : $userId){\n        id\n        name\n        globalStatus\n        planningStatus\n        perimeterStatus\n        globalDescription\n        planningDescription\n        perimeterDescription\n        goLiveDate\n        goCopyDate\n        logoUrl\n        client {\n          id \n          name\n        }\n        contributors{\n          id\n          username\n          avatarUrl\n          email\n          firstname\n          lastname\n        }\n        events{\n          id\n          type\n          description\n          contributors{\n            id\n          }\n        }\n    }\n}\n`\nexport const FIND_PROJECTS_BY_CLIENT_ID = gql`\nquery findProjectsByClientId($clientId: String! $userId : String!){\n  findProjectsByClientId(clientId : $clientId userId:$userId){\n        id\n        name\n    }\n}\n`\nexport const GET_ALL_PROJECTS = gql`\nquery{\n    getAllProjects{\n      logoUrl\n      name\n      id\n    }\n  }\n`\nexport const GET_ALL_EVENTS_ALL_TYPES = gql`\nquery getAllEventsAllTypes($id :String!){\n  getAllEventsAllTypes(id : $id){\n    type\n    id\n    period\n    creation\n    state\n    project{\n      id\n      name\n    }\n    creator {\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n    }\n    description\n    status\n    contributors{\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n    }\n    }\n  }\n`\nexport const GET_LATEST_EVENTS = gql`\nquery getLatestEvents($id: String! $type : String!){\n  getLatestEvents(id : $id type : $type){\n    type\n    id\n    creation\n    period\n    state\n    project{\n      id\n      name\n    }\n    creator {\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n    }\n    description\n    status\n    contributors{\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n    }\n    }\n  }\n`\nexport const FIND_EVENTS_BY_PROJECT_ID = gql`\nquery findEventsByProjectId($id: String! $type : String!){\n  findEventsByProjectId(id : $id type : $type){\n    type\n    id\n    period\n    description\n    status\n    state\n    creation\n    contributors{\n      id\n      firstname\n      lastname\n      email\n      avatarUrl\n      username\n    }\n    creator {\n      id\n      firstname\n      lastname\n      email\n      username\n      avatarUrl\n    }\n  }\n}\n`\n\nexport const GET_ALL_COMMENTS_BY_EVENT_ID = gql`\nquery getAllCommentsByEventId($eventId: String!){\n  getAllCommentsByEventId(eventId : $eventId){\n    id\n    content\n    creation\n    author {\n      id\n      username\n      avatarUrl\n      firstname\n      lastname\n      email\n    }\n    }\n  }\n`","import \"./Menu.scss\";\n\nconst MenuItem = ({ children, active, onClick }) => {\n  return (\n    <li onClick={onClick} className={`menu-item ${active ? \"active\" : \"\"}`}>\n      {children}\n    </li>\n  );\n};\n\nexport default MenuItem;\n","import \"./Button.scss\";\nconst Button = ({\n  children,\n  reversed,\n  style,\n  onClick,\n  disabled,\n  type,\n  props,\n}) => {\n  return (\n    <button\n      {...props}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      style={style}\n      className={\n        reversed\n          ? `button__reversed`\n          : `button__versed`\n      }\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import \"./Progress.scss\";\n\nconst Progress = ({ size, reversed, style }) => {\n  return (\n    <div\n      style={style}\n      className={`loader-${size} ${reversed && \"reversed\"}`}\n    ></div>\n  );\n};\n\nexport default Progress;\n","import \"./Menu.scss\";\n\nconst Menu = ({ children }) => {\n  return <ul className=\"menu\">{children}</ul>;\n};\n\nexport default Menu;\n","import React from \"react\";\nimport \"./Popup.scss\";\nconst Popup = ({ children, open, setOpen, bottom, style }) => {\n  const componentRef = React.useRef();\n\n  React.useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return () => document.removeEventListener(\"click\", handleClick);\n    function handleClick(e) {\n      if (componentRef && componentRef.current) {\n        const ref = componentRef.current;\n        if (!ref.contains(e.target) && open) {\n          setOpen(false);\n        }\n      }\n    }\n  }, [setOpen, open]);\n  return (\n    <>\n      {open && (\n        <div\n          ref={componentRef}\n          className={`popup ${bottom ? \"bottom\" : \"\"}`}\n          style={style}\n        >\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Popup;\n","import React from \"react\";\nimport \"./Avatar.scss\";\nimport defaultAvatar from \"../../assets/images/defaultAvatar.webp\";\nimport ReactTooltip from \"react-tooltip\";\nconst Avatar = ({ src, mini, name, large, style }) => {\n  // state variable holds the state of the internet connection\n  const [isOnline, setOnline] = React.useState(true);\n\n  // On initization set the isOnline state.\n  React.useEffect(() => {\n    setOnline(navigator.onLine);\n  }, []);\n\n  // event listeners to update the state\n  window.addEventListener(\"online\", () => {\n    setOnline(true);\n  });\n\n  window.addEventListener(\"offline\", () => {\n    setOnline(false);\n  });\n\n  if (large)\n    return (\n      <>\n        <img\n          data-tip\n          data-for={`AvatarTip${name}`}\n          className={\"avatar_large\"}\n          src={isOnline ? src : defaultAvatar}\n          style={style}\n          alt=\"\"\n        />\n        <ReactTooltip delayShow={500} id={`AvatarTip${name}`} effect=\"solid\">\n          <span>{name}</span>\n        </ReactTooltip>\n      </>\n    );\n  return (\n    <>\n      <img\n        data-tip\n        data-for={`AvatarTip${name}`}\n        className={mini ? \"avatar_mini\" : \"avatar\"}\n        src={isOnline ? src : defaultAvatar}\n        alt=\"\"\n        style={style}\n      />\n      <ReactTooltip delayShow={500} id={`AvatarTip${name}`} effect=\"solid\">\n        <span>{name}</span>\n      </ReactTooltip>\n    </>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport \"./Backdrop.scss\";\nconst Backdrop = ({ children, onClick }) => {\n  return (\n    <div\n      className=\"backdrop\"\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick && onClick();\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nexport default Backdrop;\n","const getPeriod = () => {\n  //we get today's date\n  const today = new Date();\n  const yearNumber = JSON.stringify(today.getFullYear()).slice(-2);\n  var startDate = new Date(today.getFullYear(), 0, 1);\n  var days = Math.floor((today - startDate) / (24 * 60 * 60 * 1000));\n  var weekNumber = Math.ceil((today.getDay() + 1 + days) / 7);\n  return \"Y\" + yearNumber + \"W\" + weekNumber;\n\n};\nexport default getPeriod;\n","export default __webpack_public_path__ + \"static/media/logo.df8fc71e.png\";","import \"./Switch.scss\";\nconst Switch = ({ onChange, defaultChecked }) => {\n  return (\n    <div className=\"toggle-theme-wrapper\">\n      <label className=\"toggle-theme\" htmlFor=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          id=\"checkbox\"\n          // 6\n          onChange={onChange}\n          defaultChecked={defaultChecked}\n        />\n        <div className=\"slider round\"></div>\n      </label>\n    </div>\n  );\n};\n\nexport default Switch;\n"],"sourceRoot":""}