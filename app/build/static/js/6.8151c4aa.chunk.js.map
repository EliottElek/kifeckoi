{"version":3,"sources":["materials/AutoSizeTextArea/AutoSizeTextArea.js","assets/ReactMarkdown.js","assets/functions/formatDate.js","components/GlobalInfos/UserCard/UserCard.js","components/Draggable/AutoCompleteUsers.js","components/GlobalInfos/AddContributorsModal.js","components/GlobalInfos/ModifTextArea/ModifTextArea.js","components/GlobalInfos/DatePicker/DatePicker.js","components/GlobalInfos/AddLogoModal/AddLogoModal.js","components/GlobalInfos/ChangeNameModal/ChangeNameModal.js","components/GlobalInfos/Charts/PieSelector.js","components/GlobalInfos/GlobalInfos.js"],"names":["AutoTextArea","props","textAreaRef","useRef","useState","text","setText","textAreaHeight","setTextAreaHeight","parentHeight","setParentHeight","useEffect","current","scrollHeight","style","minHeight","display","alignItems","onFocus","e","currentTarget","setSelectionRange","value","length","ref","rows","margin","height","onChange","event","target","ReactMarkdownSnippet","children","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","components","a","href","rel","onClick","stopPropagation","formatDate","date","hoursBool","day","parseInt","Date","getDate","month","getMonth","formated","getFullYear","d","minutes","getMinutes","hours","getHours","UserCard","usr","dataProject","dataEvents","modal","eventMode","useContext","Context","currentProject","user","openPopUp","setOpenPopUp","openDeleteModal","setOpenDeleteModal","useMutation","ADD_CONTRIBUTORS_TO_PROJECT","addContributors","ADD_CONTRIBUTORS_TO_EVENT","addContributorsEvents","id","useParams","handleDeleteContributor","allContributors","contributors","newContributors","filter","con","finalIds","map","r","variables","eventId","projectId","setTimeout","refetch","toast","success","position","POSITION","BOTTOM_LEFT","pauseOnHover","error","className","name","username","large","src","avatarUrl","firstname","lastname","email","open","setOpen","bottom","transform","data-tip","data-for","reversed","AutoCompleteUsers","setSelectedContributors","placeholder","multi","alreadyExistingContributors","users","customStyles","option","base","state","color","padding","cursor","singleValue","provided","opacity","isDisabled","transition","data","useQuery","GET_ALL_USERS","React","setContributors","getAllUsers","diff","a1","a2","arr","forEach","o1","found","o2","objectsEqual","push","subtractArrays","label","setData","closeMenuOnSelect","isMulti","styles","openMenuOnClick","selectedOptions","options","AddContributorsModal","selectedContributors","handleAddContributors","concat","ArrayOfIds","acc","Modal","marginTop","marginBottom","contributor","i","Button","ModifTextArea","type","modifMode","setModifMode","input","setInput","MODIFY_PROJECT_GLOBAL_INFOS","modifyProjectInfos","globalDescription","planningDescription","perimeterDescription","handleModifyDescription","globalStatus","perimeterStatus","planningStatus","goLiveDate","goCopyDate","logoUrl","handleInsertStyle","prev","autoFocus","gap","delayShow","effect","ReactMarkdown","fontStyle","DatePicker","selected","setSelected","handleChangeDate","marginLeft","Backdrop","locale","fr","background","borderRadius","maxWidth","mode","onSelect","justifyContent","AddLogoModal","url","setUrl","handleChangeLogo","ChangeNameModal","MODIFY_PROJECT_NAME","modifyProjectName","setName","handleChangeName","old","justifySelf","ChartJS","register","ArcElement","Tooltip","Legend","PieSelector","events","selector","title","labels","values","item","index","findIndex","l","datasets","backgroundColor","borderColor","borderWidth","textAlign","plugins","legend","render","fontColor","precision","datalabels","font","size","weight","status","class","icon","GlobalInfos","navigate","useNavigate","setCurrentProject","openModal","setOpenModal","openLogoModal","setOpenLogoModal","setEvents","openNameModal","setOpenNameModal","openTitleMenu","setOpenTitleMenu","openGlobalStatusPopup","setOpenGlobalStatusPopup","openPlanningStatusPopup","setOpenPlanningStatusPopup","openPerimeterStatusPopup","setOpenPerimeterStatusPopup","FIND_PROJECT_BY_PROJECT_ID","userId","onCompleted","findProjectByProjectId","eventsData","GET_ALL_EVENTS_ALL_TYPES","getAllEventsAllTypes","handleModifyGlobalStatus","handleModifyPerimeterStatus","handleModifyPlanningStatus","loading","alt","zIndex","Popup","Menu","MenuItem","client","replace","Progress","to"],"mappings":"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","file":"static/js/6.8151c4aa.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nconst AutoTextArea = (props) => {\n  const textAreaRef = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [textAreaHeight, setTextAreaHeight] = useState(\"auto\");\n  const [parentHeight, setParentHeight] = useState(\"auto\");\n\n  useEffect(() => {\n    if (textAreaRef) setParentHeight(`${textAreaRef.current.scrollHeight}px`);\n    setTextAreaHeight(`${textAreaRef.current.scrollHeight}px`);\n  }, [text]);\n\n  const onChangeHandler = (event) => {\n    setTextAreaHeight(\"auto\");\n    setParentHeight(`${textAreaRef.current.scrollHeight}px`);\n    setText(event.target.value);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: parentHeight,\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <textarea\n        onFocus={(e) =>\n          e.currentTarget.setSelectionRange(\n            e.currentTarget.value.length,\n            e.currentTarget.value.length\n          )\n        }\n        {...props}\n        ref={textAreaRef}\n        rows={1}\n        style={{\n          ...props.style,\n          margin: 0,\n          height: textAreaHeight,\n        }}\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n};\n\nexport default AutoTextArea;\n","import ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeRaw from \"rehype-raw\";\n\nconst ReactMarkdownSnippet = ({ children }) => {\n  return (\n    <ReactMarkdown\n      remarkPlugins={[remarkGfm]}\n      rehypePlugins={[rehypeRaw]}\n      components={{\n        a: ({ children, href }) => {\n          return (\n            <a\n              href={href}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              {children}\n            </a>\n          );\n        },\n      }}\n    >\n      {children}\n    </ReactMarkdown>\n  );\n};\n\nexport default ReactMarkdownSnippet;\n\n// import { createElement } from \"react\";\n// import remark from \"remark-parse\";\n// import remark2rehype from \"remark-rehype\";\n// import rehypeRaw from \"rehype-raw\";\n// import { unified } from \"unified\";\n// import rehype2react from \"rehype-react\";\n\n// const ReactMarkdownSnippet = ({ children, components = {} }) => {\n//   components.a = (props) => {\n//     return (\n//       <a\n//         href={props.href}\n//         target=\"_blank\"\n//         rel=\"noreferrer\"\n//         onClick={(e) => e.stopPropagation()}\n//       >\n//         {props.children}\n//       </a>\n//     );\n//   };\n//   const processor = unified()\n//     .use(remark)\n//     .use(remark2rehype, { allowDangerousHtml: true })\n//     .use(rehypeRaw)\n//     .use(rehype2react, {\n//       components,\n//       createElement,\n//     });\n//   const result = processor.processSync(children).result;\n//   return <div>{result}</div>;\n// };\n// export default ReactMarkdownSnippet;\n","const formatDate = (date, hoursBool) => {\n  var day = parseInt(new Date(date).getDate());\n  var month = parseInt(new Date(date).getMonth()) + 1;\n  const year = parseInt(new Date(date).getFullYear());\n  if (day <= 9) day = \"0\" + day;\n  if (month <= 9) month = \"0\" + month;\n  let formated = day + \"/\" + month + \"/\" + year;\n  if (hoursBool) {\n    const d = new Date(date);\n    var minutes = d.getMinutes();\n    var hours = d.getHours();\n    if (minutes <= 9) minutes = \"0\" + minutes;\n    if (hours <= 9) hours = \"0\" + hours;\n    const time = hours + \":\" + minutes;\n    formated += \" \" + time;\n  }\n  return formated;\n};\nexport default formatDate;\n","import { useContext, useState } from \"react\";\nimport Avatar from \"../../../materials/Avatar/Avatar\";\nimport { Context } from \"../../Context/Context\";\nimport Button from \"../../../materials/Button/Button\";\nimport Modal from \"../../../materials/Modal/Modal\";\nimport Menu from \"../../../materials/Menu/Menu\";\nimport Popup from \"../../../materials/Popup/Popup\";\nimport MenuItem from \"../../../materials/Menu/MenuItem\";\nimport {\n  ADD_CONTRIBUTORS_TO_PROJECT,\n  ADD_CONTRIBUTORS_TO_EVENT,\n} from \"../../../graphql/mutations\";\nimport { toast } from \"react-toastify\";\nimport { FiMoreHorizontal } from \"react-icons/fi\";\nimport { MdOutlineClear } from \"react-icons/md\";\nimport { useMutation } from \"@apollo/client\";\nimport { useParams } from \"react-router\";\nimport \"./UserCard.scss\";\nconst UserCard = ({\n  usr,\n  dataProject,\n  dataEvents,\n  modal,\n  eventMode,\n  event,\n}) => {\n  const { currentProject, user } = useContext(Context);\n  const [openPopUp, setOpenPopUp] = useState(false);\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\n  const [addContributors] = useMutation(ADD_CONTRIBUTORS_TO_PROJECT);\n  const [addContributorsEvents] = useMutation(ADD_CONTRIBUTORS_TO_EVENT);\n\n  const { id } = useParams();\n  const handleDeleteContributor = async (e) => {\n    e.stopPropagation();\n    try {\n      const allContributors = currentProject.contributors;\n      const newContributors = allContributors.filter(\n        (con) => con.id !== usr.id\n      );\n      const finalIds = newContributors.map((r) => r.id);\n      if (eventMode)\n        await addContributorsEvents({\n          variables: {\n            eventId: event.id,\n            contributors: finalIds,\n          },\n        });\n      else\n        await addContributors({\n          variables: {\n            projectId: id,\n            contributors: finalIds,\n          },\n        });\n      dataEvents &&\n        setTimeout(() => {\n          dataEvents.refetch();\n        }, 200);\n      dataProject &&\n        setTimeout(() => {\n          dataProject.refetch();\n        }, 200);\n      toast.success(\"Contributeur supprimé avec succès.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n      setOpenDeleteModal(false);\n    } catch (err) {\n      toast.error(\"Impossible de supprimer les contributeurs.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  return (\n    <>\n      <div className={\"user__card\"}>\n        {/* <img src={usr.avatarUrl} className={\"user__card__background\"} alt=\"\" /> */}\n        <Avatar name={usr.username} large src={usr.avatarUrl} />\n        <h5 className={\"user__card__name\"}>\n          {usr.firstname + \" \" + usr.lastname}\n        </h5>\n        <h6 className={\"user__card__username\"}>({usr.username})</h6>\n        <p className={\"user__card__email\"}>{usr.email}</p>\n        {user.id !== usr.id && !modal && (\n          <>\n            <button onClick={setOpenPopUp} className=\"delete__user__button\">\n              <FiMoreHorizontal />\n            </button>\n            <Popup\n              open={openPopUp}\n              setOpen={setOpenPopUp}\n              bottom\n              style={{\n                transform: \"translate(70%, -60%)\",\n              }}\n            >\n              <Menu>\n                {!eventMode && (\n                  <MenuItem\n                    onClick={(e) => {\n                      setOpenPopUp(false);\n                    }}\n                  >\n                    <p>Passer en administrateur</p>\n                  </MenuItem>\n                )}\n                <MenuItem\n                  onClick={(e) => {\n                    setOpenDeleteModal(true);\n                    setOpenPopUp(false);\n                  }}\n                >\n                  <p>Supprimer</p>\n                </MenuItem>\n              </Menu>\n            </Popup>\n          </>\n        )}\n      </div>\n      <Modal open={openDeleteModal} setOpen={setOpenDeleteModal}>\n        <div className=\"modal__content__container\">\n          <button\n            data-tip\n            data-for=\"closeTooltip\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setOpenDeleteModal(false);\n            }}\n            className=\"close__modal__button\"\n          >\n            <MdOutlineClear />\n          </button>\n          <h3>Êtes-vous sûr de vouloir supprimer {usr.firstname} ?</h3>\n          <p>Vous pourrez le rajouter à un autre moment. </p>\n          <div className={\"delete__actions__container\"}>\n            <Button reversed onClick={() => setOpenDeleteModal(false)}>\n              Annuler\n            </Button>\n            <Button onClick={handleDeleteContributor}>Supprimer</Button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_USERS } from \"../../graphql/queries\";\nimport Select from \"react-select\";\n\nconst AutoCompleteUsers = ({\n  setSelectedContributors,\n  placeholder,\n  multi,\n  alreadyExistingContributors,\n  users,\n}) => {\n  const customStyles = {\n    option: (base, state) => ({\n      ...base,\n      color: \"#1e2022\",\n      padding: \".5rem 3rem .5rem .5rem\",\n      cursor: \"pointer\",\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = \"opacity 300ms\";\n\n      return { ...provided, opacity, transition };\n    },\n  };\n  const { data } = useQuery(GET_ALL_USERS);\n  const [contributors, setContributors] = React.useState([]);\n\n  React.useEffect(() => {\n    const setData = () => {\n      function objectsEqual(o1, o2) {\n        return o1.id === o2.id;\n      }\n\n      function subtractArrays(a1, a2) {\n        var arr = [];\n        if (!a1) return a2;\n        if (!a2) return a1;\n\n        a1.forEach((o1) => {\n          var found = false;\n          a2.forEach((o2) => {\n            if (objectsEqual(o1, o2)) {\n              found = true;\n            }\n          });\n          if (!found) {\n            arr.push(o1);\n          }\n        });\n        return arr;\n      }\n      if (data?.getAllUsers) {\n        var newUsers = [];\n        if (!users) newUsers = data?.getAllUsers;\n        else newUsers = users;\n        const finalUsers = newUsers.map((user) => {\n          return {\n            ...user,\n            label: user.username,\n            value: user.username,\n          };\n        });\n        const diff = subtractArrays(finalUsers, alreadyExistingContributors);\n        setContributors(diff);\n      }\n    };\n    setData();\n  }, [alreadyExistingContributors, data?.getAllUsers, setContributors, users]);\n  return (\n    <Select\n      closeMenuOnSelect={false}\n      isMulti={multi ? true : false}\n      placeholder={placeholder}\n      styles={customStyles}\n      openMenuOnClick={(e) => e.stopPropagation()}\n      onChange={(selectedOptions) => {\n        setSelectedContributors(selectedOptions);\n      }}\n      options={contributors}\n    />\n  );\n};\n\nexport default AutoCompleteUsers;\n","import React from \"react\";\nimport AutoCompleteUsers from \"../Draggable/AutoCompleteUsers\";\nimport Modal from \"../../materials/Modal/Modal\";\nimport { MdOutlineClear } from \"react-icons/md\";\nimport UserCard from \"./UserCard/UserCard\";\nimport Button from \"../../materials/Button/Button\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_CONTRIBUTORS_TO_PROJECT } from \"../../graphql/mutations\";\nimport { useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nconst AddContributorsModal = ({\n  open,\n  setOpen,\n  dataProject,\n  alreadyExistingContributors,\n}) => {\n  const [selectedContributors, setSelectedContributors] = React.useState([]);\n  const [addContributors] = useMutation(ADD_CONTRIBUTORS_TO_PROJECT);\n  const { id } = useParams();\n  const handleAddContributors = async () => {\n    try {\n      const allContributors =\n        alreadyExistingContributors.concat(selectedContributors);\n      const ArrayOfIds = allContributors.map((acc) => acc.id);\n\n      await addContributors({\n        variables: {\n          projectId: id,\n          contributors: ArrayOfIds,\n        },\n      });\n      setTimeout(() => {\n        dataProject.refetch();\n      }, 200);\n      setOpen(false);\n      toast.success(\"Contributeurs ajoutés avec succès.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(\"Impossible d'ajouter les contributeurs.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  return (\n    <Modal open={open}>\n      <div className=\"modal__content__container\">\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            setOpen(false);\n          }}\n          className=\"close__modal__button\"\n        >\n          <MdOutlineClear />\n        </button>\n        <h2\n          className=\"title__global\"\n          style={{ marginTop: \"30px\", marginBottom: \"20px\" }}\n        >\n          Sélectionnez des contributeurs\n        </h2>\n        <AutoCompleteUsers\n          multi\n          placeholder=\"Cherchez un contributeur...\"\n          alreadyExistingContributors={alreadyExistingContributors}\n          setSelectedContributors={setSelectedContributors}\n        />\n        <div className={\"user__cards__container\"} style={{ marginTop: \"30px\" }}>\n          {alreadyExistingContributors?.map((contributor, i) => (\n            <UserCard modal usr={contributor} key={i} />\n          ))}\n          {selectedContributors?.map((contributor, i) => (\n            <UserCard modal usr={contributor} key={i} />\n          ))}\n        </div>\n        <div className=\"add__contributors__actions__container\">\n          <Button reversed onClick={() => setOpen(false)}>\n            Annuler\n          </Button>\n          <Button onClick={handleAddContributors}>Ajouter</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddContributorsModal;\n","import React from \"react\";\nimport { Context } from \"../../Context/Context\";\nimport \"./ModifTextArea.scss\";\nimport { MODIFY_PROJECT_GLOBAL_INFOS } from \"../../../graphql/mutations\";\nimport { toast } from \"react-toastify\";\nimport {\n  AiOutlineUnorderedList,\n  AiOutlineItalic,\n  AiOutlineLink,\n} from \"react-icons/ai\";\nimport { BiItalic } from \"react-icons/bi\";\nimport { BsTypeBold } from \"react-icons/bs\";\nimport { useMutation } from \"@apollo/client\";\nimport AutoTextArea from \"../../../materials/AutoSizeTextArea/AutoSizeTextArea\";\nimport Button from \"../../../materials/Button/Button\";\nimport ReactMarkdownSnippet from \"../../../assets/ReactMarkdown\";\nimport ReactTooltip from \"react-tooltip\";\nconst ModifTextArea = ({ type, dataProject }) => {\n  const { currentProject } = React.useContext(Context);\n  const [modifMode, setModifMode] = React.useState(false);\n  const [input, setInput] = React.useState(\"\");\n  const [modifyProjectInfos] = useMutation(MODIFY_PROJECT_GLOBAL_INFOS);\n\n  React.useEffect(() => {\n    if (type === \"global\") setInput(currentProject.globalDescription);\n    else if (type === \"planning\") setInput(currentProject.planningDescription);\n    else setInput(currentProject.perimeterDescription);\n  }, [\n    type,\n    setInput,\n    currentProject.globalDescription,\n    currentProject.planningDescription,\n    currentProject.perimeterDescription,\n  ]);\n\n  const handleModifyDescription = async () => {\n    try {\n      await modifyProjectInfos({\n        variables: {\n          projectId: currentProject.id,\n          globalStatus: currentProject.globalStatus,\n          perimeterStatus: currentProject.perimeterStatus,\n          planningStatus: currentProject.planningStatus,\n          goLiveDate: currentProject.goLiveDate,\n          goCopyDate: currentProject.goCopyDate,\n          logoUrl: currentProject.logoUrl,\n          globalDescription:\n            type === \"global\" ? input : currentProject.globalDescription,\n          perimeterDescription:\n            type === \"perimètre\" ? input : currentProject.perimeterDescription,\n          planningDescription:\n            type === \"planning\" ? input : currentProject.planningDescription,\n        },\n      });\n      dataProject.refetch();\n      toast.success(`description du status ${type} modifiée avec succès.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n      setModifMode(false);\n    } catch (err) {\n      toast.error(`impossible de modifier la description du status ${type}`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  const handleInsertStyle = (style) => {\n    if (style === \"bold\") {\n      setInput((prev) => prev + \" **bold** \");\n    } else if (style === \"italic\") {\n      setInput((prev) => prev + \" *italic* \");\n    } else if (style === \"italic&bold\") {\n      setInput((prev) => prev + \" ***italic and bold*** \");\n    } else if (style === \"h1\") {\n      setInput((prev) => (prev === \"\" ? \"# title 1\" : prev + \"\\n # title 1 \"));\n    } else if (style === \"h2\") {\n      setInput((prev) =>\n        prev === \"\" ? \"## title 2\" : prev + \"\\n ## title 2 \"\n      );\n    } else if (style === \"h3\") {\n      setInput((prev) =>\n        prev === \"\" ? \"### title 3\" : prev + \"\\n ### title 3 \"\n      );\n    } else if (style === \"list\") {\n      setInput((prev) =>\n        prev === \"\"\n          ? \"- item 1 \\n - item 2 \\n - item 3\"\n          : prev + \"\\n - item 1 \\n - item 2 \\n - item 3\"\n      );\n    } else if (style === \"link\") {\n      setInput((prev) => prev + \" [text](url) \");\n    }\n  };\n  if (modifMode)\n    return (\n      <div className={\"edit__block__container\"}>\n        <div className=\"edit__block__actions__container\">\n          <button\n            data-tip\n            data-for=\"h1Tooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"h1\")}\n          >\n            <h1>h1</h1>\n          </button>\n          <button\n            data-tip\n            data-for=\"h2Tooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"h2\")}\n          >\n            <h2>h2</h2>\n          </button>\n          <button\n            data-tip\n            data-for=\"h3Tooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"h3\")}\n          >\n            <h3>h3</h3>\n          </button>\n          <button\n            data-tip\n            data-for=\"boldTooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"bold\")}\n          >\n            <BsTypeBold />\n          </button>\n          <button\n            data-tip\n            data-for=\"italicTooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"italic\")}\n          >\n            <AiOutlineItalic />\n          </button>\n          <button\n            data-tip\n            data-for=\"bolditalicTooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"italic&bold\")}\n          >\n            <BiItalic />\n          </button>\n          <button\n            data-tip\n            data-for=\"listTooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"list\")}\n          >\n            <AiOutlineUnorderedList />\n          </button>\n          <button\n            data-tip\n            data-for=\"linkTooltip\"\n            className=\"edit__button\"\n            onClick={() => handleInsertStyle(\"link\")}\n          >\n            <AiOutlineLink />\n          </button>\n        </div>\n        <AutoTextArea\n          autoFocus\n          className=\"modif__textarea\"\n          value={input}\n          placeholder={`Ajoutez une description au status ${type}...`}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"4px\",\n            margin: \"4px\",\n            marginTop: \"8px\",\n          }}\n        >\n          <Button\n            onClick={() => setModifMode(false)}\n            reversed\n            style={{ height: \"30px\" }}\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleModifyDescription} style={{ height: \"30px\" }}>\n            Valider\n          </Button>\n        </div>\n        <ReactTooltip delayShow={500} id=\"h1Tooltip\" effect=\"solid\">\n          <span>Grand titre</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"h2Tooltip\" effect=\"solid\">\n          <span>Moyen titre</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"h3Tooltip\" effect=\"solid\">\n          <span>Petit titre</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"boldTooltip\" effect=\"solid\">\n          <span>Gras</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"italicTooltip\" effect=\"solid\">\n          <span>Italique</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"bolditalicTooltip\" effect=\"solid\">\n          <span>Gras + italique</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"listTooltip\" effect=\"solid\">\n          <span>Liste</span>\n        </ReactTooltip>\n        <ReactTooltip delayShow={500} id=\"linkTooltip\" effect=\"solid\">\n          <span>Lien</span>\n        </ReactTooltip>\n      </div>\n    );\n  else\n    return (\n      <>\n        {input !== \"\" ? (\n          <div\n            onClick={() => setModifMode(true)}\n            className=\"modif__textarea__paragraph\"\n          >\n            {type === \"global\" && (\n              <ReactMarkdownSnippet>\n                {currentProject.globalDescription}\n              </ReactMarkdownSnippet>\n            )}\n            {type === \"planning\" && (\n              <ReactMarkdownSnippet>\n                {currentProject.planningDescription}\n              </ReactMarkdownSnippet>\n            )}\n            {type === \"perimètre\" && (\n              <ReactMarkdownSnippet>\n                {currentProject.perimeterDescription}\n              </ReactMarkdownSnippet>\n            )}\n          </div>\n        ) : (\n          <p style={{ fontStyle: \"italic\" }}>\n            Vous pouvez ajouter une description au status {type}.{\" \"}\n            <Button\n              reversed\n              onClick={() => setModifMode(true)}\n              style={{ height: \"30px\" }}\n            >\n              Ajouter une description\n            </Button>\n          </p>\n        )}\n      </>\n    );\n};\n\nexport default ModifTextArea;\n","import React from \"react\";\nimport { Context } from \"../../Context/Context\";\nimport { MODIFY_PROJECT_GLOBAL_INFOS } from \"../../../graphql/mutations\";\nimport { toast } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\nimport { DayPicker } from \"react-day-picker\";\nimport Button from \"../../../materials/Button/Button\";\nimport \"react-day-picker/dist/style.css\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport \"./DatePicker.scss\";\nimport fr from \"date-fns/locale/fr\";\nimport Backdrop from \"../../../materials/Backdrop/Backdrop\";\nimport formatDate from \"../../../assets/functions/formatDate\";\n\nconst DatePicker = ({ type, dataProject }) => {\n  const { currentProject } = React.useContext(Context);\n  const [modifyProjectInfos] = useMutation(MODIFY_PROJECT_GLOBAL_INFOS);\n  const [selected, setSelected] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setSelected(\n      type === \"Go live\"\n        ? new Date(currentProject.goLiveDate)\n        : new Date(currentProject.goCopyDate)\n    );\n  }, [currentProject.goCopyDate, currentProject.goLiveDate, type, setSelected]);\n  const [modifMode, setModifMode] = React.useState(false);\n  const handleChangeDate = async (e) => {\n    try {\n      await modifyProjectInfos({\n        variables: {\n          projectId: currentProject.id,\n          globalStatus: currentProject.globalStatus,\n          perimeterStatus: currentProject.perimeterStatus,\n          planningStatus: currentProject.planningStatus,\n          goLiveDate: type === \"Go live\" ? selected : currentProject.goLiveDate,\n          goCopyDate: type === \"Go copy\" ? selected : currentProject.goCopyDate,\n          globalDescription: currentProject.globalDescription,\n          perimeterDescription: currentProject.perimeterDescription,\n          planningDescription: currentProject.planningDescription,\n          logoUrl: currentProject.logoUrl,\n        },\n      });\n      dataProject.refetch();\n      setModifMode(false);\n      toast.success(`date de ${type} modifiée avec succès.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(`impossible de changer la date de ${type}`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  if (type === \"Go live\" && currentProject.goLiveDate === \"\")\n    return (\n      <div>\n        <Button\n          onClick={() => setModifMode(true)}\n          reversed\n          style={{ height: \"30px\", marginLeft: \"-20px\" }}\n        >\n          Ajouter une date de Go live\n        </Button>\n        {modifMode && (\n          <Backdrop>\n            <div className=\"date__picker__form\">\n              <DayPicker\n                locale={fr}\n                style={{\n                  background: \"var(--card-background)\",\n                  borderRadius: \"8px\",\n                  maxWidth: \"300px\",\n                }}\n                mode=\"single\"\n                selected={selected}\n                onSelect={setSelected}\n              />\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"4px\",\n                  margin: \"4px\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Button\n                  onClick={() => setModifMode(false)}\n                  reversed\n                  style={{ height: \"30px\" }}\n                >\n                  Annuler\n                </Button>\n                <Button style={{ height: \"30px\" }} onClick={handleChangeDate}>\n                  Valider\n                </Button>\n              </div>\n            </div>\n          </Backdrop>\n        )}\n      </div>\n    );\n  if (type === \"Go copy\" && currentProject.goCopyDate === \"\")\n    return (\n      <div>\n        <Button\n          onClick={() => setModifMode(true)}\n          reversed\n          style={{ height: \"30px\", marginLeft: \"-20px\" }}\n        >\n          Ajouter une date de Go copy\n        </Button>\n        {modifMode && (\n          <Backdrop>\n            <div className=\"date__picker__form\">\n              <DayPicker\n                locale={fr}\n                style={{\n                  background: \"var(--card-background)\",\n                  borderRadius: \"8px\",\n                  maxWidth: \"300px\",\n                }}\n                mode=\"single\"\n                selected={selected}\n                onSelect={setSelected}\n              />\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"4px\",\n                  margin: \"4px\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Button\n                  onClick={() => setModifMode(false)}\n                  reversed\n                  style={{ height: \"30px\" }}\n                >\n                  Annuler\n                </Button>\n                <Button style={{ height: \"30px\" }} onClick={handleChangeDate}>\n                  Valider\n                </Button>\n              </div>\n            </div>\n          </Backdrop>\n        )}\n      </div>\n    );\n  return (\n    <>\n      <h4 className={\"date__picker__container\"}>\n        {type === \"Go live\" ? \"Go live le \" : \"Go copy le \"}\n        <span className=\"date__span\" onClick={() => setModifMode(true)}>\n          {type === \"Go live\"\n            ? formatDate(currentProject.goLiveDate)\n            : formatDate(currentProject.goCopyDate)}\n        </span>\n        <span className=\"edit__icon\">\n          <FiEdit2 />\n        </span>\n      </h4>\n      {modifMode && (\n        <Backdrop onClick={() => setModifMode(false)}>\n          <div\n            className=\"date__picker__form\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <DayPicker\n              locale={fr}\n              style={{\n                background: \"var(--card-background)\",\n                borderRadius: \"8px\",\n                maxWidth: \"300px\",\n              }}\n              mode=\"single\"\n              selected={selected}\n              onSelect={setSelected}\n            />\n            <div\n              style={{\n                display: \"flex\",\n                gap: \"4px\",\n                margin: \"4px\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                onClick={() => setModifMode(false)}\n                reversed\n                style={{ height: \"30px\" }}\n              >\n                Annuler\n              </Button>\n              <Button style={{ height: \"30px\" }} onClick={handleChangeDate}>\n                Valider\n              </Button>\n            </div>\n          </div>\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nexport default DatePicker;\n","import React from \"react\";\nimport AutoTextArea from \"../../../materials/AutoSizeTextArea/AutoSizeTextArea\";\nimport Modal from \"../../../materials/Modal/Modal\";\nimport { MODIFY_PROJECT_GLOBAL_INFOS } from \"../../../graphql/mutations\";\nimport { toast } from \"react-toastify\";\nimport { Context } from \"../../Context/Context\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"../../../materials/Button/Button\";\nconst AddLogoModal = ({ open, setOpen, dataProject }) => {\n  const { currentProject } = React.useContext(Context);\n  const [modifyProjectInfos] = useMutation(MODIFY_PROJECT_GLOBAL_INFOS);\n  const [url, setUrl] = React.useState(currentProject.logoUrl);\n\n  const handleChangeLogo = async () => {\n    try {\n      await modifyProjectInfos({\n        variables: {\n          projectId: currentProject.id,\n          globalStatus: currentProject.globalStatus,\n          perimeterStatus: currentProject.perimeterStatus,\n          planningStatus: currentProject.planningStatus,\n          goLiveDate: currentProject.goLiveDate,\n          goCopyDate: currentProject.goCopyDate,\n          globalDescription: currentProject.globalDescription,\n          perimeterDescription: currentProject.perimeterDescription,\n          planningDescription: currentProject.planningDescription,\n          logoUrl: url,\n        },\n      });\n      dataProject.refetch();\n      setOpen(false);\n      toast.success(`Logo modifié avec succès.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(`Impossible de changer le logo.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  return (\n    <Modal open={open} setOpen={setOpen}>\n      <div className=\"modal__content__container\">\n        <AutoTextArea\n          autoFocus\n          className=\"modif__textarea\"\n          value={url}\n          placeholder={`Ajoutez un logo au format url...`}\n          onChange={(e) => setUrl(e.target.value)}\n        />{\" \"}\n        <div style={{ display: \"flex\", gap: \"6px\" }}>\n          <Button\n            style={{ height: \"30px\" }}\n            reversed\n            onClick={() => setOpen(false)}\n          >\n            Annuler\n          </Button>\n          <Button style={{ height: \"30px\" }} onClick={handleChangeLogo}>\n            Valider\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddLogoModal;\n","import React from \"react\";\nimport AutoTextArea from \"../../../materials/AutoSizeTextArea/AutoSizeTextArea\";\nimport Modal from \"../../../materials/Modal/Modal\";\nimport { MODIFY_PROJECT_NAME } from \"../../../graphql/mutations\";\nimport { toast } from \"react-toastify\";\nimport { Context } from \"../../Context/Context\";\nimport { useMutation } from \"@apollo/client\";\nimport Button from \"../../../materials/Button/Button\";\nimport \"./ChangeNameModal.scss\";\nconst ChangeNameModal = ({ open, setOpen, dataProject }) => {\n  const { currentProject } = React.useContext(Context);\n  const [modifyProjectName] = useMutation(MODIFY_PROJECT_NAME);\n  const [name, setName] = React.useState(\"\");\n  React.useEffect(() => {\n    setName(currentProject.name);\n  }, [currentProject.name, setName]);\n  const handleChangeName = async () => {\n    if (name === \"\") return;\n    const old = currentProject.name;\n    try {\n      await modifyProjectName({\n        variables: {\n          projectId: currentProject.id,\n          name: name,\n        },\n      });\n      dataProject.refetch();\n      setOpen(false);\n      toast.success(`\"${old}\" s'appelle désormais \"${name}\".`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(`Impossible de changer le nom.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  return (\n    <Modal open={open} setOpen={setOpen}>\n      <div className=\"modal__content__container space-between\">\n        <AutoTextArea\n          autoFocus\n          className=\"modif__textarea big__title__textarea\"\n          value={name}\n          placeholder={`Le nom du projet ne peut pas être vide...`}\n          onChange={(e) => setName(e.target.value)}\n        />{\" \"}\n        <div style={{ display: \"flex\", gap: \"6px\", justifySelf: \"flex-end\" }}>\n          <Button\n            style={{ height: \"30px\" }}\n            reversed\n            onClick={() => setOpen(false)}\n          >\n            Annuler\n          </Button>\n          <Button style={{ height: \"30px\" }} onClick={handleChangeName}>\n            Valider\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ChangeNameModal;\n","import React from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst PieSelector = ({ events, selector, title }) => {\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    let labels = [];\n    let values = [];\n    events?.forEach((item) => {\n      const index = labels.findIndex((l) => l === item[selector]);\n      if (index === -1) {\n        labels.push(item[selector]);\n        values.push(1);\n      } else {\n        values[index]++;\n      }\n    });\n    setData({\n      labels: labels,\n      datasets: [\n        {\n          label: \"# of Votes\",\n          data: values,\n          backgroundColor: [\n            \"#01ffff80\",\n            \"#5ec2c280\",\n            \"#4f9b9b80\",\n            \"#748f8f80\",\n            \"#8d8d8d80\",\n          ],\n          borderColor: [\n            \"#01ffff80\",\n            \"#5ec2c280\",\n            \"#4f9b9b80\",\n            \"#748f8f80\",\n            \"#8d8d8d80\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    });\n  }, [events, setData, selector]);\n  const options = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n      render: \"percentage\",\n      fontColor: [\"green\", \"white\", \"red\"],\n      precision: 2,\n      text: \"23%\",\n      datalabels: {\n        // display: false,\n        color: \"black\",\n        font: {\n          size: 14,\n          weight: \"bold\",\n        },\n      },\n    },\n  };\n  if (!data || data.labels.length === 0)\n    return (\n      <div style={{ position: \"relative\" }}>\n        <h4 style={{ fontStyle: \"italic\" }}>Aucun évènement.</h4>\n      </div>\n    );\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        maxWidth: \"240px\",\n        textAlign: \"center\",\n        padding: \"8px\",\n      }}\n    >\n      <h5\n        style={{\n          padding: \"8px\",\n        }}\n      >\n        {title}\n      </h5>\n      <Pie options={options} data={data} />\n    </div>\n  );\n};\nexport default PieSelector;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  FIND_PROJECT_BY_PROJECT_ID,\n  GET_ALL_EVENTS_ALL_TYPES,\n} from \"../../graphql/queries\";\nimport { MODIFY_PROJECT_GLOBAL_INFOS } from \"../../graphql/mutations\";\nimport { Navigate, useNavigate, useParams } from \"react-router\";\nimport { IoIosAddCircle } from \"react-icons/io\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport Backdrop from \"../../materials/Backdrop/Backdrop\";\nimport Progress from \"../../materials/Progress/Progress\";\nimport \"./GlobalInfos.scss\";\nimport UserCard from \"./UserCard/UserCard\";\nimport AddContributorsModal from \"./AddContributorsModal\";\nimport { FiMoreHorizontal } from \"react-icons/fi\";\nimport Button from \"../../materials/Button/Button\";\nimport Popup from \"../../materials/Popup/Popup\";\nimport Menu from \"../../materials/Menu/Menu\";\nimport MenuItem from \"../../materials/Menu/MenuItem\";\nimport { toast } from \"react-toastify\";\nimport ModifTextArea from \"./ModifTextArea/ModifTextArea\";\nimport DatePicker from \"./DatePicker/DatePicker\";\nimport AddLogoModal from \"./AddLogoModal/AddLogoModal\";\nimport ChangeNameModal from \"./ChangeNameModal/ChangeNameModal\";\nimport PieSelector from \"./Charts/PieSelector\";\nconst status = [\n  {\n    name: \"conforme\",\n    class: \"conforme\",\n    icon: \"\",\n  },\n  {\n    name: \"vigilance\",\n    class: \"vigilance\",\n    icon: \"\",\n  },\n  {\n    name: \"à risque\",\n    class: \"à risque\",\n    icon: \"\",\n  },\n  {\n    name: \"alerte\",\n    class: \"alerte\",\n    icon: \"\",\n  },\n  {\n    name: \"issue\",\n    class: \"issue\",\n    icon: \"\",\n  },\n  {\n    name: \"gestion de crise\",\n    class: \"gestion de crise\",\n    icon: \"\",\n  },\n];\nconst GlobalInfos = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { currentProject, setCurrentProject, user } = useContext(Context);\n  const [openModal, setOpenModal] = useState(false);\n  const [openLogoModal, setOpenLogoModal] = useState(false);\n  const [events, setEvents] = useState([]);\n\n  const [openNameModal, setOpenNameModal] = useState(false);\n  const [openTitleMenu, setOpenTitleMenu] = useState(false);\n  const [openGlobalStatusPopup, setOpenGlobalStatusPopup] = useState(false);\n  const [openPlanningStatusPopup, setOpenPlanningStatusPopup] = useState(false);\n  const [openPerimeterStatusPopup, setOpenPerimeterStatusPopup] =\n    useState(false);\n\n  const [modifyProjectInfos] = useMutation(MODIFY_PROJECT_GLOBAL_INFOS);\n  const dataProject = useQuery(FIND_PROJECT_BY_PROJECT_ID, {\n    variables: { id: id, userId: user?.id },\n    onCompleted: (data) => {\n      setCurrentProject(data?.findProjectByProjectId);\n    },\n  });\n  const eventsData = useQuery(GET_ALL_EVENTS_ALL_TYPES, {\n    variables: { id: id },\n    onCompleted: (data) => {\n      setEvents(data?.getAllEventsAllTypes);\n    },\n  });\n  React.useEffect(() => {\n    eventsData.refetch();\n  });\n  const handleModifyGlobalStatus = async (item) => {\n    try {\n      setOpenGlobalStatusPopup(false);\n      await modifyProjectInfos({\n        variables: {\n          projectId: currentProject.id,\n          globalStatus: item.name,\n          perimeterStatus: currentProject.perimeterStatus,\n          planningStatus: currentProject.planningStatus,\n          goLiveDate: currentProject.goLiveDate,\n          goCopyDate: currentProject.goCopyDate,\n          globalDescription: currentProject.globalDescription,\n          perimeterDescription: currentProject.perimeterDescription,\n          planningDescription: currentProject.planningDescription,\n          logoUrl: currentProject.logoUrl,\n        },\n      });\n      dataProject.refetch();\n      toast.success(`État global passé à \"${item.name}\"`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(\"Impossible de changer l'état du status global.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  const handleModifyPerimeterStatus = async (item) => {\n    try {\n      setOpenPerimeterStatusPopup(false);\n      await modifyProjectInfos({\n        variables: {\n          projectId: currentProject.id,\n          globalStatus: currentProject.globalStatus,\n          perimeterStatus: item.name,\n          goLiveDate: currentProject.goLiveDate,\n          goCopyDate: currentProject.goCopyDate,\n          planningStatus: currentProject.planningStatus,\n          globalDescription: currentProject.globalDescription,\n          perimeterDescription: currentProject.perimeterDescription,\n          planningDescription: currentProject.planningDescription,\n          logoUrl: currentProject.logoUrl,\n        },\n      });\n      dataProject.refetch();\n      toast.success(`État périmètre passé à \"${item.name}\"`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(\"Impossible de changer l'état du status périmètre.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  const handleModifyPlanningStatus = async (item) => {\n    try {\n      setOpenPlanningStatusPopup(false);\n      await modifyProjectInfos({\n        variables: {\n          projectId: currentProject.id,\n          globalStatus: currentProject.globalStatus,\n          perimeterStatus: currentProject.perimeterStatus,\n          planningStatus: item.name,\n          goLiveDate: currentProject.goLiveDate,\n          goCopyDate: currentProject.goCopyDate,\n          globalDescription: currentProject.globalDescription,\n          perimeterDescription: currentProject.perimeterDescription,\n          planningDescription: currentProject.planningDescription,\n          logoUrl: currentProject.logoUrl,\n        },\n      });\n      dataProject.refetch();\n      toast.success(`État planning passé à \"${item.name}\"`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    } catch (err) {\n      toast.error(\"Impossible de changer l'état du status planning.\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnHover: false,\n      });\n    }\n  };\n  if (!dataProject.data && !dataProject.loading) {\n    return <Navigate to=\"/404\" />;\n  }\n  if (!currentProject)\n    return (\n      <Backdrop>\n        <Progress size=\"medium\" reversed />\n      </Backdrop>\n    );\n  return (\n    <div className=\"global__infos__container\">\n      <div style={{ margin: \"30px\" }}>\n        <h2 className=\"title__global__big\">\n          {currentProject?.name}{\" \"}\n          {currentProject.logoUrl !== \"\" && (\n            <img\n              alt=\"\"\n              className={\"project__logo\"}\n              src={currentProject.logoUrl}\n            />\n          )}\n          <div className={\"title__buttons__container\"} style={{ zIndex: 2 }}>\n            <button\n              className=\"title__modif__button\"\n              onClick={() => setOpenTitleMenu(true)}\n            >\n              <FiMoreHorizontal />\n            </button>\n            <Popup\n              bottom\n              open={openTitleMenu}\n              setOpen={setOpenTitleMenu}\n              style={{ transform: \"translate(-5px,-20px)\" }}\n            >\n              <Menu>\n                <MenuItem\n                  onClick={() => {\n                    setOpenTitleMenu(false);\n                    setOpenNameModal(true);\n                  }}\n                >\n                  <span>Changer le nom</span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setOpenTitleMenu(false);\n                    setOpenLogoModal(true);\n                  }}\n                >\n                  {currentProject.logoUrl === \"\" ? (\n                    <span>Ajouter un logo</span>\n                  ) : (\n                    <span>Modifier le logo</span>\n                  )}\n                </MenuItem>\n                <span className={\"divider\"} />\n                <MenuItem\n                  onClick={() => {\n                    setOpenTitleMenu(false);\n                  }}\n                >\n                  <span>Supprimer le projet</span>\n                </MenuItem>\n              </Menu>\n            </Popup>\n          </div>\n        </h2>\n        <h4\n          className={\"client__link__big\"}\n          onClick={() => navigate(`/client/${currentProject?.client?.id}`)}\n        >\n          {currentProject?.client.name}\n        </h4>\n        <DatePicker type={\"Go live\"} dataProject={dataProject} />\n        <DatePicker type={\"Go copy\"} dataProject={dataProject} />\n        <h1\n          style={{\n            marginTop: \"30px\",\n            marginBottom: \"15px\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          Status global{\" \"}\n          <span\n            className={`status__span ${\n              currentProject.globalStatus\n                ? currentProject.globalStatus.replace(/ /g, \"__\")\n                : \"conforme\"\n            }__span`}\n            onClick={() => setOpenGlobalStatusPopup(true)}\n          >\n            {currentProject.globalStatus\n              ? currentProject.globalStatus\n              : \"conforme\"}{\" \"}\n            {<FaChevronDown />}\n          </span>\n          <Popup\n            style={{ transform: \"translate(200px, 100px)\" }}\n            bottom\n            open={openGlobalStatusPopup}\n            setOpen={setOpenGlobalStatusPopup}\n          >\n            <Menu>\n              {status.map((item, i) => (\n                <MenuItem\n                  key={i}\n                  onClick={() => {\n                    handleModifyGlobalStatus(item);\n                  }}\n                >\n                  <span>\n                    {item.name} {item.icon}\n                  </span>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Popup>\n        </h1>\n        <ModifTextArea type={\"global\"} dataProject={dataProject} />\n        <h3\n          style={{\n            marginTop: \"30px\",\n            marginBottom: \"15px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            position: \"relative\",\n          }}\n        >\n          Status planning{\" \"}\n          <span\n            className={`status__span ${\n              currentProject.planningStatus\n                ? currentProject.planningStatus.replace(/ /g, \"__\")\n                : \"conforme\"\n            }__span`}\n            onClick={() => setOpenPlanningStatusPopup(true)}\n          >\n            {currentProject.planningStatus\n              ? currentProject.planningStatus\n              : \"conforme\"}{\" \"}\n            {<FaChevronDown />}\n          </span>\n          <Popup\n            style={{ transform: \"translate(145px, 100px)\" }}\n            bottom\n            open={openPlanningStatusPopup}\n            setOpen={setOpenPlanningStatusPopup}\n          >\n            <Menu>\n              {status.map((item, i) => (\n                <MenuItem\n                  key={i}\n                  onClick={() => {\n                    handleModifyPlanningStatus(item);\n                  }}\n                >\n                  <span>\n                    {item.name} {item.icon}\n                  </span>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Popup>\n        </h3>\n        <ModifTextArea type={\"planning\"} dataProject={dataProject} />\n        <h3\n          style={{\n            marginTop: \"30px\",\n            marginBottom: \"15px\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          Status périmètre{\" \"}\n          <span\n            className={`status__span ${\n              currentProject.perimeterStatus\n                ? currentProject.perimeterStatus.replace(/ /g, \"__\")\n                : \"conforme\"\n            }__span`}\n            onClick={() => setOpenPerimeterStatusPopup(true)}\n          >\n            {currentProject.perimeterStatus\n              ? currentProject.perimeterStatus\n              : \"conforme\"}{\" \"}\n            {<FaChevronDown />}\n          </span>\n          <Popup\n            style={{ transform: \"translate(156px, 100px)\" }}\n            bottom\n            open={openPerimeterStatusPopup}\n            setOpen={setOpenPerimeterStatusPopup}\n          >\n            <Menu>\n              {status.map((item, i) => (\n                <MenuItem\n                  key={i}\n                  onClick={() => {\n                    handleModifyPerimeterStatus(item);\n                  }}\n                >\n                  <span>\n                    {item.name} {item.icon}\n                  </span>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Popup>\n        </h3>\n        <ModifTextArea type={\"perimètre\"} dataProject={dataProject} />\n        <h3 style={{ marginTop: \"30px\" }}>Évènements</h3>\n        <div className=\"global__charts__container\">\n          <PieSelector events={events} selector=\"type\" title={\"Types\"} />\n          <PieSelector events={events} selector=\"period\" title={\"Périodes\"} />\n          <PieSelector events={events} selector=\"state\" title={\"États\"} />\n          <PieSelector events={events} selector=\"status\" title={\"Status\"} />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: \"30px\",\n            marginBottom: \"20px\",\n            gap: \"12px\",\n          }}\n        >\n          <h2 className=\"title__global\">\n            Contributeurs ({currentProject?.contributors?.length}){\" \"}\n          </h2>{\" \"}\n          <Button\n            onClick={() => setOpenModal(true)}\n            style={{ height: \"35px\", gap: \"8px\" }}\n          >\n            Ajouter <IoIosAddCircle />\n          </Button>\n        </div>\n        <div className={\"user__cards__container\"}>\n          {currentProject?.contributors?.map((contributor, i) => (\n            <UserCard dataProject={dataProject} usr={contributor} key={i} />\n          ))}\n        </div>\n      </div>\n      <AddContributorsModal\n        dataProject={dataProject}\n        alreadyExistingContributors={currentProject?.contributors}\n        open={openModal}\n        setOpen={setOpenModal}\n      />\n      <AddLogoModal\n        open={openLogoModal}\n        setOpen={setOpenLogoModal}\n        dataProject={dataProject}\n      />\n      <ChangeNameModal\n        open={openNameModal}\n        setOpen={setOpenNameModal}\n        dataProject={dataProject}\n      />\n    </div>\n  );\n};\n\nexport default GlobalInfos;\n"],"sourceRoot":""}